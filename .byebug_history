exit
action
c
handler[:actions]
exit
actions
n
c
n
c
handler
c
n
ctx.instance_eval(&filter)
n
ctx.instance_eval { message.text == "/cancel" }
ctx.instance_eval { message.text == "/start" }
ctx.instance_eval { message.text }
ctx.instance_eval do
filter
n
ctx
n
message.text
c
n
@handlers
n
@filter_stack
n
instance_variables
local_variables
c
n
@state_stack
n
filter_stack
exit
TelegramBotDialogTool.methods
exit
TelegramBotDialogTool.class_variables
n
TelegramBotDialogTool.class_variables
TelegramBotDialogTool.instance_variables
TelegramBotDialogTool.handlerss
TelegramBotDialogTool.handlers
exit
filter_stack
handlers
handlerss
handlers
exit
e
TelegramBotDialogTool.class_variables
TelegramBotDialogTool.instance_variables
TelegramBotDialogTool
c
@filter_proc
filter_proc.call
l=
proc.call
(&proc).call
&proc.call
proc.call
n
c
state
instance_variables
local_variables
c
@storage
exit
@storage
data
